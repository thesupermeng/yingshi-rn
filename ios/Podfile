require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, min_ios_version_supported
prepare_react_native_project!

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'yingshi' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => false,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'yingshiTests' do
    inherit! :complete
    # Pods for testing
  end

  # # UMPlusDemo为工程target名
  pod 'UMCommon'   
  pod 'UMDevice'

  # # pod <友盟+SDK名> 按需复制相应SDK名称代码

  # # 依赖库

  pod 'UMCCommonLog'
  # # 必选，APM组件，原错误分析升级为独立产品U-APM
  pod 'UMAPM' 	
  pod 'AppCenter'
  
  pod 'AnyThinkiOS','6.2.66'
  pod 'AnyThinkiOS/AnyThinkMaioAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkStartAppAdapter','6.2.66'
  pod 'AnyThinkBaiduAdapter','6.2.66.1'
  pod 'AnyThinkiOS/AnyThinkNendAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkKuaiShouAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkSigmobAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkVungleAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkUnityAdsAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkIronSourceAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkTapjoyAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkTTAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkAdColonyAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkKlevinAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkKidozAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkAdmobAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkInmobiAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkApplovinAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkMintegralAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkGDTAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkChartboostAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkMyTargetAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkFyberAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkOguryAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkBigoAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkYandexAdapter','6.2.66'
  
  # not support in china
  # pod 'AnyThinkiOS/AnyThinkPangleAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkFacebookAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkMintegralAdapter','6.2.66'
  pod 'AnyThinkiOS/AnyThinkPubNativeAdapter','6.2.66'

  
  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    installer.pods_project.build_configurations.each do |config|
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
    end
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
